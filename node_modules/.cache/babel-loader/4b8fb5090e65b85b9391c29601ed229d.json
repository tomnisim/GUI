{"ast":null,"code":"import axios from \"axios\"; //import { REMOVE_PRODUCT_FROM_CART, EDIT_PRODUCT_QUANTITY_IN_CART, ADD_PRODUCT_TO_CART, FIND_PRODUCTS_BY_NAME, FIND_PRODUCTS_BY_CATEGORY,FIND_PRODUCTS_BY_KEYWORDS , FIND_PRODUCT_INFORMATION} from \"./ApiPaths\";\n\nimport { Response } from \"./Response\";\nconst instance = axios.create({\n  withCredentials: true\n});\nexport class ProductApi {\n  find_product_information(product_id) {\n    return instance.post(FIND_PRODUCT_INFORMATION, {\n      product_id: product_id\n    }).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  find_product_by_name(product_name) {\n    return instance.post(FIND_PRODUCTS_BY_NAME, {\n      product_name: product_name\n    }).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  find_product_by_category(product_category) {\n    return instance.post(FIND_PRODUCTS_BY_CATEGORY, {\n      product_category: product_category\n    }).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  find_product_by_keywords(product_keywords) {\n    return instance.post(FIND_PRODUCTS_BY_KEYWORDS, {\n      product_keywords: product_keywords\n    }).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  add_product_to_cart(store_id, product_id, quantity) {\n    return instance.post(ADD_PRODUCT_TO_CART, {\n      store_id: store_id,\n      product_id: product_id,\n      quantity: quantity\n    }).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  edit_product_quantity_in_cart(store_id, product_id, quantity) {\n    return instance.post(EDIT_PRODUCT_QUANTITY_IN_CART, {\n      store_id: store_id,\n      product_id: product_id,\n      quantity: quantity\n    }).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  remove_product_from_cart(store_id, product_id) {\n    return instance.post(REMOVE_PRODUCT_FROM_CART, {\n      store_id: store_id,\n      product_id: product_id\n    }).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n}","map":{"version":3,"names":["axios","Response","instance","create","withCredentials","ProductApi","find_product_information","product_id","post","FIND_PRODUCT_INFORMATION","then","res","data","catch","undefined","find_product_by_name","product_name","FIND_PRODUCTS_BY_NAME","find_product_by_category","product_category","FIND_PRODUCTS_BY_CATEGORY","find_product_by_keywords","product_keywords","FIND_PRODUCTS_BY_KEYWORDS","add_product_to_cart","store_id","quantity","ADD_PRODUCT_TO_CART","edit_product_quantity_in_cart","EDIT_PRODUCT_QUANTITY_IN_CART","remove_product_from_cart","REMOVE_PRODUCT_FROM_CART"],"sources":["C:/Users/Tom/Desktop/my-app2/my-app2/src/API/ProductApi.js"],"sourcesContent":["import axios from \"axios\";\r\n//import { REMOVE_PRODUCT_FROM_CART, EDIT_PRODUCT_QUANTITY_IN_CART, ADD_PRODUCT_TO_CART, FIND_PRODUCTS_BY_NAME, FIND_PRODUCTS_BY_CATEGORY,FIND_PRODUCTS_BY_KEYWORDS , FIND_PRODUCT_INFORMATION} from \"./ApiPaths\";\r\n\r\nimport { Response } from \"./Response\";\r\nconst instance = axios.create(\r\n    {withCredentials : true}\r\n);\r\n\r\n\r\n\r\nexport class ProductApi {\r\n    find_product_information(product_id) {\r\n        return instance.post(FIND_PRODUCT_INFORMATION,\r\n            {\r\n                product_id: product_id,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n    find_product_by_name(product_name) {\r\n        return instance.post(FIND_PRODUCTS_BY_NAME,\r\n            {\r\n                product_name: product_name,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    find_product_by_category(product_category) {\r\n        return instance.post(FIND_PRODUCTS_BY_CATEGORY,\r\n            {\r\n                product_category: product_category,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n    find_product_by_keywords(product_keywords) {\r\n        return instance.post(FIND_PRODUCTS_BY_KEYWORDS,\r\n            {\r\n                product_keywords: product_keywords,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    add_product_to_cart(store_id, product_id, quantity) {\r\n        return instance.post(ADD_PRODUCT_TO_CART,\r\n            {\r\n                store_id: store_id,\r\n                product_id: product_id,\r\n                quantity: quantity,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    edit_product_quantity_in_cart(store_id, product_id, quantity) {\r\n        return instance.post(EDIT_PRODUCT_QUANTITY_IN_CART,\r\n            {\r\n                store_id: store_id,\r\n                product_id: product_id,\r\n                quantity: quantity,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    remove_product_from_cart(store_id, product_id) {\r\n        return instance.post(REMOVE_PRODUCT_FROM_CART,\r\n            {\r\n                store_id: store_id,\r\n                product_id: product_id,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n    \r\n    \r\n   \r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,SAASC,QAAT,QAAyB,YAAzB;AACA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CACb;EAACC,eAAe,EAAG;AAAnB,CADa,CAAjB;AAMA,OAAO,MAAMC,UAAN,CAAiB;EACpBC,wBAAwB,CAACC,UAAD,EAAa;IACjC,OAAOL,QAAQ,CAACM,IAAT,CAAcC,wBAAd,EACH;MACIF,UAAU,EAAEA;IADhB,CADG,EAIFG,IAJE,CAIGC,GAAG,IAAI;MACT,OAAO,IAAIV,QAAJ,CAAaU,GAAG,CAACC,IAAjB,CAAP;IACH,CANE,EAOFC,KAPE,CAOIF,GAAG,IAAIG,SAPX,CAAP;EAQH;;EACDC,oBAAoB,CAACC,YAAD,EAAe;IAC/B,OAAOd,QAAQ,CAACM,IAAT,CAAcS,qBAAd,EACH;MACID,YAAY,EAAEA;IADlB,CADG,EAIFN,IAJE,CAIGC,GAAG,IAAI;MACT,OAAO,IAAIV,QAAJ,CAAaU,GAAG,CAACC,IAAjB,CAAP;IACH,CANE,EAOFC,KAPE,CAOIF,GAAG,IAAIG,SAPX,CAAP;EAQH;;EAEDI,wBAAwB,CAACC,gBAAD,EAAmB;IACvC,OAAOjB,QAAQ,CAACM,IAAT,CAAcY,yBAAd,EACH;MACID,gBAAgB,EAAEA;IADtB,CADG,EAIFT,IAJE,CAIGC,GAAG,IAAI;MACT,OAAO,IAAIV,QAAJ,CAAaU,GAAG,CAACC,IAAjB,CAAP;IACH,CANE,EAOFC,KAPE,CAOIF,GAAG,IAAIG,SAPX,CAAP;EAQH;;EACDO,wBAAwB,CAACC,gBAAD,EAAmB;IACvC,OAAOpB,QAAQ,CAACM,IAAT,CAAce,yBAAd,EACH;MACID,gBAAgB,EAAEA;IADtB,CADG,EAIFZ,IAJE,CAIGC,GAAG,IAAI;MACT,OAAO,IAAIV,QAAJ,CAAaU,GAAG,CAACC,IAAjB,CAAP;IACH,CANE,EAOFC,KAPE,CAOIF,GAAG,IAAIG,SAPX,CAAP;EAQH;;EAEDU,mBAAmB,CAACC,QAAD,EAAWlB,UAAX,EAAuBmB,QAAvB,EAAiC;IAChD,OAAOxB,QAAQ,CAACM,IAAT,CAAcmB,mBAAd,EACH;MACIF,QAAQ,EAAEA,QADd;MAEIlB,UAAU,EAAEA,UAFhB;MAGImB,QAAQ,EAAEA;IAHd,CADG,EAMFhB,IANE,CAMGC,GAAG,IAAI;MACT,OAAO,IAAIV,QAAJ,CAAaU,GAAG,CAACC,IAAjB,CAAP;IACH,CARE,EASFC,KATE,CASIF,GAAG,IAAIG,SATX,CAAP;EAUH;;EAEDc,6BAA6B,CAACH,QAAD,EAAWlB,UAAX,EAAuBmB,QAAvB,EAAiC;IAC1D,OAAOxB,QAAQ,CAACM,IAAT,CAAcqB,6BAAd,EACH;MACIJ,QAAQ,EAAEA,QADd;MAEIlB,UAAU,EAAEA,UAFhB;MAGImB,QAAQ,EAAEA;IAHd,CADG,EAMFhB,IANE,CAMGC,GAAG,IAAI;MACT,OAAO,IAAIV,QAAJ,CAAaU,GAAG,CAACC,IAAjB,CAAP;IACH,CARE,EASFC,KATE,CASIF,GAAG,IAAIG,SATX,CAAP;EAUH;;EAEDgB,wBAAwB,CAACL,QAAD,EAAWlB,UAAX,EAAuB;IAC3C,OAAOL,QAAQ,CAACM,IAAT,CAAcuB,wBAAd,EACH;MACIN,QAAQ,EAAEA,QADd;MAEIlB,UAAU,EAAEA;IAFhB,CADG,EAKFG,IALE,CAKGC,GAAG,IAAI;MACT,OAAO,IAAIV,QAAJ,CAAaU,GAAG,CAACC,IAAjB,CAAP;IACH,CAPE,EAQFC,KARE,CAQIF,GAAG,IAAIG,SARX,CAAP;EASH;;AA/EmB"},"metadata":{},"sourceType":"module"}