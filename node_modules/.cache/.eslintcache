[{"C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\index.js":"1","C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\App.js":"2","C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\reportWebVitals.js":"3","C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\components\\ListEmployee.js":"4","C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\components\\Login.js":"5","C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\components\\Register.js":"6","C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\components\\HomePageSearch.js":"7","C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\API\\ProductApi.js":"8","C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\API\\Response.js":"9","C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\API\\ApiPaths.js":"10","C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\API\\ConnectApi.js":"11"},{"size":669,"mtime":1652716998843,"results":"12","hashOfConfig":"13"},{"size":996,"mtime":1652707734373,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1652115185568,"results":"15","hashOfConfig":"13"},{"size":2809,"mtime":1652275886239,"results":"16","hashOfConfig":"17"},{"size":3704,"mtime":1652636455495,"results":"18","hashOfConfig":"13"},{"size":4107,"mtime":1652634763651,"results":"19","hashOfConfig":"13"},{"size":2443,"mtime":1652796797864,"results":"20","hashOfConfig":"13"},{"size":5981,"mtime":1652796805395,"results":"21","hashOfConfig":"13"},{"size":296,"mtime":1652784096348,"results":"22","hashOfConfig":"13"},{"size":7417,"mtime":1652795405491,"results":"23","hashOfConfig":"13"},{"size":1556,"mtime":1652776299818,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1e6ucbu",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"8kqvvp",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\index.js",["63"],[],"C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\App.js",["64"],[],"C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\components\\ListEmployee.js",["65","66","67","68"],[],"import React, { useEffect, useState } from 'react';\r\n//import StatsApi from '../API/train';\r\n//import EmployeeService from '../ServiceObjects/EmployeeService'\r\nconst axios = require('axios');\r\nconst EMPLOYEE_BASE_REST_API_URL = \"http://localhost:8080/amit\";\r\n\r\n//const foo = async () =>  await EmployeeService.getName();\r\n\r\nasync function ListEmployee()  {\r\n    let x = \" fuck\"\r\n    // StatsApi = new StatsApi();\r\n    // const fetchedStats = await StatsApi.loginState();\r\n    //x = await foo();\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"text-center\">\r\n                ListEmployee\r\n            </h2>\r\n            <table className=\"table table-bordered table-stripped\">\r\n                <thead>\r\n                    <th>Employee Id</th>\r\n                    <th>Employee First Name</th>\r\n                    <th>Employee Last Name</th>\r\n                </thead>\r\n                <body>\r\n                    {\r\n                        \r\n                    }\r\n                </body>\r\n            </table>\r\n            ListEmployee\r\n            {x}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListEmployee\r\n\r\n\r\n// import React, { useState, useEffect } from 'react'\r\n// import EmployeeService from '../Services/EmployeeService'\r\n// const axios = require('axios');\r\n\r\n// const EMPLOYEE_BASE_REST_API_URL = \"http://localhost:8080/amit\";\r\n// const setEmployee = [{\r\n//     \"id\": 1,\r\n//     \"name\": \"Eylon\"\r\n// },\r\n// {\r\n//     \"id\": 2,\r\n//     \"name\": \"Tom\"\r\n//     }];\r\n\r\n// const ListEmployee = () => {\r\n//     const [Employees, setEmployees] = useState([])\r\n//     useEffect(() => {\r\n//         EmployeeService.getAllEmployees().then((response) => {\r\n//             setEmployees(setEmployee)\r\n//             console.log(response.data)\r\n//         }).catch(error => {\r\n//                 console.log(error)\r\n//             })\r\n//       }, [])\r\n    \r\n//     return (\r\n//         <div className=\"container\">\r\n//             <h2 className=\"text-center\">\r\n//                 ListEmployee\r\n//             </h2>\r\n//             <table className=\"table table-bordered table-stripped\">\r\n//                 <thead>\r\n//                     <th>Employee Id</th>\r\n//                     <th>Employee First Name</th>\r\n//                     <th>Employee Last Name</th>\r\n//                 </thead>\r\n//                 <body>\r\n//                     {setEmployee.map(\r\n//                         setEmployee => <tr> key = setEmployee.id\r\n//                             <td> {setEmployee.id} </td>\r\n//                             <td> {setEmployee.name} </td>\r\n//                         </tr>\r\n//                     )}\r\n//                 </body>\r\n//             </table>\r\n//             ListEmployee\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default ListEmployee\r\n\r\n",[],"C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\components\\Login.js",["69","70","71"],[],"import React, { Component } from 'react';\r\nimport \"./Login.css\"\r\nconst axios = require('axios');\r\nconst EMPLOYEE_BASE_REST_API_URL = \"http://localhost:8080/amit\";\r\n\r\nexport default class Login extends Component {\r\n    static displayName = Login.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            loginError: undefined,\r\n            username: undefined,\r\n            password: undefined,\r\n            role: \"member\",\r\n            submitted: this.props.isLoggedIn\r\n        };\r\n        // this.authApi = new AuthApi();\r\n        \r\n        // this.handleInputChange = this.handleInputChange.bind(this);\r\n        // this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    // handleInputChange(event){\r\n    //     const target = event.target;\r\n    //     this.setState({\r\n    //         [target.name]: target.value\r\n    //     });\r\n    // }\r\n    \r\n    async handleSubmit(event){\r\n        event.preventDefault();\r\n        const {username, password, role} = this.state;\r\n        const loginRedirectAndRes = await this.authApi.Login(username, password, role);\r\n        if(loginRedirectAndRes) {\r\n            const loginRes = loginRedirectAndRes.data;\r\n\r\n            if (loginRes && loginRes.isSuccess) {\r\n                this.props.loginUpdateHandler(username, this.getUserRole(role))\r\n            } else {\r\n                this.setState({\r\n                    loginError: loginRes.error\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                loginError: \"You need to be a guest\"\r\n            })\r\n        }\r\n    }\r\n    \r\n    // getUserRole(role){\r\n    //     return role === \"member\" ? UserRole.Member :\r\n    //         role === \"admin\" ? UserRole.Admin : \r\n    //         undefined\r\n    // }\r\n\r\n\r\n    //async componentDidUpdate()\r\n    \r\n    async componentDidMount() {\r\n        const response =await axios.get(EMPLOYEE_BASE_REST_API_URL).then(res => res).catch(err => err);\r\n        console.log(response.data);\r\n        let x = response;\r\n        //let y = new Gson().fromjson(x);\r\n        this.setState({\r\n            [\"username\"]: response.data.wasException\r\n        });\r\n        \r\n\r\n        return response.data;\r\n\r\n    }\r\n    \r\n    render() {\r\n        const {redirectTo} = this.state\r\n            return (\r\n                <main class=\"LoginMain\">\r\n                    <div class=\"LoginWindow\">\r\n                        <h3>Login</h3>\r\n                        <form class=\"LoginForm\" onSubmit={this.handleSubmit}>\r\n                            {this.state.loginError ?\r\n                                <div class=\"CenterItemContainer\"><label>{this.state.loginError}</label></div> : null}\r\n                            <input type=\"text\" name=\"username\" value={this.state.username}\r\n                                    placeholder=\"Username1\" required/>\r\n                            <input type=\"password\" name=\"password\" value={this.state.password}\r\n                                    placeholder=\"Password\" required/>\r\n                            <select name=\"role\" value={this.state.role} required>\r\n                                <option value=\"member\">Member</option>\r\n                                <option value=\"admin\">Admin</option>\r\n                            </select>\r\n                            <div className=\"ConnectRegister\">\r\n                                \r\n                                {/* <Link to=\"/register\">Create new account</Link> */}\r\n                                <input class=\"action\" type=\"submit\" value=\"Login\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </main>\r\n            );\r\n        \r\n    }\r\n}","C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\components\\Register.js",["72","73","74"],[],"import React, { Component } from 'react';\r\nimport \"./Login.css\"\r\nconst axios = require('axios');\r\nconst EMPLOYEE_BASE_REST_API_URL = \"http://localhost:8080/amit\";\r\n\r\nexport default class Register extends Component {\r\n    static displayName = Register.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            loginError: undefined,\r\n            username: undefined,\r\n            password: undefined,\r\n            firstname: undefined,\r\n            lastname: undefined,\r\n            role: \"member\",\r\n            submitted: this.props.isLoggedIn\r\n        };\r\n        this.componentDidMount();\r\n        // this.authApi = new AuthApi();\r\n        \r\n        // this.handleInputChange = this.handleInputChange.bind(this);\r\n        // this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    // handleInputChange(event){\r\n    //     const target = event.target;\r\n    //     this.setState({\r\n    //         [target.name]: target.value\r\n    //     });\r\n    // }\r\n    \r\n    async handleSubmit(event){\r\n        event.preventDefault();\r\n        const {username, password, role} = this.state;\r\n        const loginRedirectAndRes = await this.authApi.Login(username, password, role);\r\n        if(loginRedirectAndRes) {\r\n            const loginRes = loginRedirectAndRes.data;\r\n\r\n            if (loginRes && loginRes.isSuccess) {\r\n                this.props.loginUpdateHandler(username, this.getUserRole(role))\r\n            } else {\r\n                this.setState({\r\n                    loginError: loginRes.error\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                loginError: \"You need to be a guest\"\r\n            })\r\n        }\r\n    }\r\n    \r\n    // getUserRole(role){\r\n    //     return role === \"member\" ? UserRole.Member :\r\n    //         role === \"admin\" ? UserRole.Admin : \r\n    //         undefined\r\n    // }\r\n    \r\n    async componentDidMount() {\r\n        const response =await axios.get(EMPLOYEE_BASE_REST_API_URL).then(res => res).catch(err => err);\r\n        console.log(response.data);\r\n        let x = response;\r\n        //let y = new Gson().fromjson(x);\r\n        this.setState({\r\n            [\"username\"]: \"y\"\r\n        });\r\n        \r\n\r\n        return response.data;\r\n\r\n    }\r\n    \r\n    render() {\r\n        const {redirectTo} = this.state\r\n            return (\r\n                <main class=\"RegisterMain\">\r\n                    <div class=\"RegisterWindow\">\r\n                        <h3>Register</h3>\r\n                        <form class=\"RegisterForm\" onSubmit={this.handleSubmit}>\r\n                            {this.state.loginError ?\r\n                                <div class=\"CenterItemContainer\"><label>{this.state.loginError}</label></div> : null}\r\n                            <input type=\"text\" name=\"username\" value={this.state.username}\r\n                                    placeholder=\"Username\" required/>\r\n                            <input type=\"password\" name=\"password\" value={this.state.password}\r\n                                    placeholder=\"Password\" required/>\r\n                            <input type=\"firstname\" name=\"firstname\" value={this.state.firstname}\r\n                                    placeholder=\"First Name\" required/>\r\n                            <input type=\"lastname\" name=\"lastname\" value={this.state.lastname}\r\n                                    placeholder=\"Last Name\" required/>\r\n                            <select name=\"role\" value={this.state.role} required>\r\n                                <option value=\"member\">Member</option>\r\n                                <option value=\"admin\">Admin</option>\r\n                            </select>\r\n                            <div className=\"ConnectRegister\">\r\n                                \r\n                                {/* <Link to=\"/register\">Create new account</Link> */}\r\n                                <input class=\"action\" type=\"submit\" value=\"Register\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </main>\r\n            );\r\n        \r\n    }\r\n}","C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\components\\HomePageSearch.js",["75","76","77","78"],[],"C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\API\\ProductApi.js",["79"],[],"C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\API\\Response.js",[],[],"C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\API\\ApiPaths.js",[],[],"C:\\Users\\Tom\\Desktop\\my-app2\\my-app2\\src\\API\\ConnectApi.js",[],[],{"ruleId":"80","severity":1,"message":"81","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":14},{"ruleId":"80","severity":1,"message":"84","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"80","severity":1,"message":"85","line":1,"column":28,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"86","line":4,"column":7,"nodeType":"82","messageId":"83","endLine":4,"endColumn":12},{"ruleId":"80","severity":1,"message":"87","line":5,"column":7,"nodeType":"82","messageId":"83","endLine":5,"endColumn":33},{"ruleId":"80","severity":1,"message":"88","line":64,"column":13,"nodeType":"82","messageId":"83","endLine":64,"endColumn":14},{"ruleId":"89","severity":1,"message":"90","line":67,"column":13,"nodeType":"91","messageId":"92","endLine":67,"endColumn":53,"fix":"93"},{"ruleId":"80","severity":1,"message":"94","line":76,"column":16,"nodeType":"82","messageId":"83","endLine":76,"endColumn":26},{"ruleId":"80","severity":1,"message":"88","line":64,"column":13,"nodeType":"82","messageId":"83","endLine":64,"endColumn":14},{"ruleId":"89","severity":1,"message":"90","line":67,"column":13,"nodeType":"91","messageId":"92","endLine":67,"endColumn":30,"fix":"95"},{"ruleId":"80","severity":1,"message":"94","line":76,"column":16,"nodeType":"82","messageId":"83","endLine":76,"endColumn":26},{"ruleId":"80","severity":1,"message":"96","line":7,"column":8,"nodeType":"82","messageId":"83","endLine":7,"endColumn":13},{"ruleId":"80","severity":1,"message":"86","line":9,"column":7,"nodeType":"82","messageId":"83","endLine":9,"endColumn":12},{"ruleId":"80","severity":1,"message":"87","line":10,"column":7,"nodeType":"82","messageId":"83","endLine":10,"endColumn":33},{"ruleId":"80","severity":1,"message":"94","line":47,"column":16,"nodeType":"82","messageId":"83","endLine":47,"endColumn":26},{"ruleId":"80","severity":1,"message":"97","line":40,"column":21,"nodeType":"82","messageId":"83","endLine":40,"endColumn":29},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is assigned a value but never used.","'EMPLOYEE_BASE_REST_API_URL' is assigned a value but never used.","'x' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"username\"] found.","Property","unnecessarilyComputedProperty",{"range":"98","text":"99"},"'redirectTo' is assigned a value but never used.",{"range":"100","text":"99"},"'train' is defined but never used.","'response' is assigned a value but never used.",[2110,2122],"\"username\"",[2182,2194]]